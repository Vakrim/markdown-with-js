{"version":3,"sources":["App/Editor.tsx","App/interpretor.tsx","App/Code.tsx","App/Preview.tsx","App/Button.tsx","App/VariableEditor.tsx","App/VariablesEditor.tsx","App/useLocalStorage.tsx","App/useList.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Editor","React","memo","props","react_default","a","createElement","Wrapper","Textarea","value","onChange","e","target","styled","textarea","_templateObject","div","_templateObject2","interprete","code","variables","arguments","length","undefined","node","acorn","execute","type","body","expression","executeBinaryExpression","executeCallExpression","name","Error","concat","operator","left","right","functions","ceil","x","Math","floor","round","callee","fn","args","map","argument","apply","Object","toConsumableArray","ErrorWrappeer","className","data-text","children","randomInt","max","random","generateKeyframes","keyframes","Code_templateObject","Array","fill","n","i","keyframesAfter","keyframesBefore","span","Code_templateObject2","VariablesContext","createContext","md","Remarkable","renderer","RemarkableReactRenderer","components","useContext","interpretation","status","result","error","message","safeInterprete","Code_Error","Preview","_ref","Provider","render","Button","button","Button_templateObject","VariableEditor","id","updateName","updateValue","removeVariable","VariableEditorWrapper","Input","RemoveButton","onClick","input","VariableEditor_templateObject","VariableEditor_templateObject2","_templateObject3","VariablesEditor","addVariable","variable","key","useLocalStorage","initialValue","_useState","useState","valueFromStorage","window","localStorage","getItem","JSON","parse","_useState2","slicedToArray","item","setValue","setState","prevState","newState","Function","setItem","stringify","useList","_useLocalStorage","_useLocalStorage2","list","updateList","useCallback","objectSpread","test","parseFloat","safeParseNumber","addItem","removeItem","filter","createVariablesObject","obj","forEach","App","App_templateObject","InputColumn","App_templateObject2","PreviewColumn","App_templateObject3","Boolean","location","hostname","match","ReactDOM","_useList","_useList2","updateCode","App_App","VariablesEditor_VariablesEditor","Preview_Preview","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8184019.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Editor = React.memo(\r\n  (props: {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    variables: object;\r\n  }) => {\r\n    return (\r\n      <Wrapper>\r\n        <Textarea\r\n          value={props.value}\r\n          onChange={e => props.onChange(e.target.value)}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  }\r\n);\r\n\r\nconst Textarea = styled.textarea`\r\n  min-height: 300px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  flex: 1 0 auto;\r\n  display: flex;\r\n`;\r\n","import * as acorn from 'acorn';\r\n\r\ntype Variables = {\r\n  [name: string]: any;\r\n};\r\n\r\nexport const interprete = (code: string, variables: Variables = {}) => {\r\n  const node = acorn.parse(code) as Node;\r\n\r\n  return execute(node, variables);\r\n};\r\n\r\ntype BaseNode = acorn.Node;\r\n\r\ntype ProgramNode = {\r\n  type: 'Program';\r\n  body: Node[];\r\n} & BaseNode;\r\ntype ExpressionStatementNode = {\r\n  type: 'ExpressionStatement';\r\n  expression: Node;\r\n} & BaseNode;\r\ntype BinaryExpressionNode = {\r\n  type: 'BinaryExpression';\r\n  operator: string;\r\n  left: Node;\r\n  right: Node;\r\n} & BaseNode;\r\ntype CallExpressionNode = {\r\n  type: 'CallExpression';\r\n  callee: Node;\r\n  arguments: Node[];\r\n} & BaseNode;\r\ntype LiteralNode = {\r\n  type: 'Literal';\r\n  value: any;\r\n} & BaseNode;\r\ntype IdentifierNode = {\r\n  type: 'Identifier';\r\n  name: string;\r\n} & BaseNode;\r\n\r\ntype Node =\r\n  | ProgramNode\r\n  | ExpressionStatementNode\r\n  | BinaryExpressionNode\r\n  | CallExpressionNode\r\n  | LiteralNode\r\n  | IdentifierNode;\r\n\r\nconst execute = (node: Node, variables: Variables): any => {\r\n  switch (node.type) {\r\n    case 'Program':\r\n      return execute(node.body[node.body.length - 1], variables);\r\n    case 'ExpressionStatement':\r\n      return execute(node.expression, variables);\r\n    case 'BinaryExpression':\r\n      return executeBinaryExpression(node, variables);\r\n    case 'CallExpression':\r\n      return executeCallExpression(node, variables);\r\n    case 'Literal':\r\n      return node.value;\r\n    case 'Identifier':\r\n      if (node.name in variables) {\r\n        return variables[node.name];\r\n      } else {\r\n        throw new Error(`Missing variable: ${node.name}`);\r\n      }\r\n    default:\r\n      throw new Error(`Unexpected node type: ${(node as BaseNode).type}`);\r\n  }\r\n};\r\n\r\nconst executeBinaryExpression = (\r\n  node: BinaryExpressionNode,\r\n  variables: Variables\r\n) => {\r\n  switch (node.operator) {\r\n    case '+':\r\n      return execute(node.left, variables) + execute(node.right, variables);\r\n    case '-':\r\n      return execute(node.left, variables) - execute(node.right, variables);\r\n    case '*':\r\n      return execute(node.left, variables) * execute(node.right, variables);\r\n    case '/':\r\n      return execute(node.left, variables) / execute(node.right, variables);\r\n    default:\r\n      throw new Error(`Unexpected operator type: ${node.operator}`);\r\n  }\r\n};\r\n\r\nconst functions: { [name: string]: Function } = {\r\n  ceil: (x: number) => Math.ceil(x),\r\n  floor: (x: number) => Math.floor(x),\r\n  round: (x: number) => Math.round(x),\r\n};\r\n\r\nconst executeCallExpression = (\r\n  node: CallExpressionNode,\r\n  variables: Variables\r\n) => {\r\n  if (node.callee.type !== 'Identifier') {\r\n    throw new Error(`Only Identifier are supported as function name`);\r\n  }\r\n\r\n  const fn = functions[node.callee.name];\r\n\r\n  if (!fn) {\r\n    throw new Error(`Unexpected function: ${node.callee.name}`);\r\n  }\r\n\r\n  const args = node.arguments.map(argument => execute(argument, variables));\r\n\r\n  return fn(...args);\r\n};\r\n","import React, { useContext, ReactNode } from 'react';\r\nimport { interprete } from './interpretor';\r\nimport { VariablesContext } from './Preview';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport const Code = (props: { children: string }) => {\r\n  const variables = useContext(VariablesContext);\r\n\r\n  const interpretation = safeInterprete(props.children, variables);\r\n\r\n  if (interpretation.status === 'ERROR') {\r\n    return <Error>{interpretation.error}</Error>;\r\n  }\r\n\r\n  return <span>{interpretation.result}</span>;\r\n};\r\n\r\nconst Error = (props: { children: string }) => {\r\n  return (\r\n    <ErrorWrappeer>\r\n      <span className=\"glitch\" data-text={props.children}>\r\n        {props.children}\r\n      </span>\r\n    </ErrorWrappeer>\r\n  );\r\n};\r\n\r\nconst randomInt = (max: number) => Math.floor(Math.random() * max);\r\n\r\nconst generateKeyframes = () => keyframes`\r\n  ${new Array(21).fill(null).map((n, i) => {\r\n    return `\r\n      ${i * 5}% {\r\n        clip: rect(${randomInt(35)}px, 9999px, ${randomInt(35)}px, 0);\r\n      }\r\n    `;\r\n  })}\r\n`;\r\n\r\nconst keyframesAfter = generateKeyframes();\r\nconst keyframesBefore = generateKeyframes();\r\n\r\nconst ErrorWrappeer = styled.span`\r\n  color: #ff4081;\r\n  border-radius: 4px;\r\n  border: 1px solid #ff4081;\r\n  padding: 3px;\r\n  margin: -3px;\r\n  display: inline-block;\r\n\r\n  .glitch {\r\n    color: #ff4081;\r\n    position: relative;\r\n  }\r\n  .glitch:after {\r\n    content: attr(data-text);\r\n    position: absolute;\r\n    left: 2px;\r\n    text-shadow: -2px 0 red;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: ff4081;\r\n    background: black;\r\n    overflow: hidden;\r\n    clip: rect(0, 900px, 0, 0);\r\n    animation: ${keyframesAfter} 2s infinite linear alternate-reverse;\r\n  }\r\n\r\n  .glitch:before {\r\n    content: attr(data-text);\r\n    position: absolute;\r\n    left: -2px;\r\n    text-shadow: 2px 0 blue;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: ff4081;\r\n    background: black;\r\n    overflow: hidden;\r\n    clip: rect(0, 900px, 0, 0);\r\n    animation: ${keyframesBefore} 3s infinite linear alternate-reverse;\r\n  }\r\n`;\r\n\r\ntype ResultOrError =\r\n  | { status: 'OK'; result: string }\r\n  | { status: 'ERROR'; error: string };\r\n\r\nfunction safeInterprete(\r\n  code: string,\r\n  variables: {\r\n    [name: string]: any;\r\n  }\r\n): ResultOrError {\r\n  try {\r\n    return { status: 'OK', result: `${interprete(code, variables)}` };\r\n  } catch (e) {\r\n    return { status: 'ERROR', error: e.message };\r\n  }\r\n}\r\n","/// <reference path=\"./remarkable.d.ts\" />\r\n\r\nimport React from 'react';\r\nimport Remarkable from 'remarkable';\r\nimport RemarkableReactRenderer from 'remarkable-react';\r\nimport { Code } from './Code';\r\n\r\nexport const VariablesContext = React.createContext<{ [name: string]: any }>(\r\n  {}\r\n);\r\n\r\nconst md = new Remarkable();\r\nmd.renderer = new RemarkableReactRenderer({\r\n  components: {\r\n    code: Code,\r\n  },\r\n});\r\n\r\nexport const Preview = ({\r\n  code,\r\n  variables,\r\n}: {\r\n  code: string;\r\n  variables: { [name: string]: any };\r\n}) => {\r\n  return (\r\n    <VariablesContext.Provider value={variables}>\r\n      {md.render(code)}\r\n    </VariablesContext.Provider>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  background: #00ff9c;\r\n  color: #100d23;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    transition: 0.3s background;\r\n    background: #ff4081;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { Button } from './Button';\r\n\r\nexport type Variable = {\r\n  id: number;\r\n  name: string;\r\n  value: string | number;\r\n};\r\n\r\nexport const VariableEditor = React.memo(\r\n  ({\r\n    id,\r\n    name,\r\n    value,\r\n    updateName,\r\n    updateValue,\r\n    removeVariable,\r\n  }: {\r\n    id: number;\r\n    name: string;\r\n    value: string | number;\r\n    updateName: (id: number, name: string) => void;\r\n    updateValue: (id: number, value: string) => void;\r\n    removeVariable: (id: number) => void;\r\n  }) => {\r\n    return (\r\n      <VariableEditorWrapper>\r\n        <Input value={name} onChange={e => updateName(id, e.target.value)} />\r\n        <Input value={value} onChange={e => updateValue(id, e.target.value)} />\r\n        <RemoveButton onClick={() => removeVariable(id)}>Remove</RemoveButton>\r\n      </VariableEditorWrapper>\r\n    );\r\n  }\r\n);\r\n\r\nconst Input = styled.input`\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst RemoveButton = styled(Button)`\r\n  opacity: 0;\r\n`;\r\n\r\nconst VariableEditorWrapper = styled.div`\r\n  max-width: 300px;\r\n  display: flex;\r\n  margin: 5px 0;\r\n\r\n  ${Input} {\r\n    border-color: transparent;\r\n  }\r\n\r\n  :hover {\r\n    ${Input} {\r\n      transition: 0.3s border;\r\n      border-color: #00ff9c;\r\n    }\r\n\r\n    ${RemoveButton} {\r\n      transition: 0.3s opacity;\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { VariableEditor, Variable } from './VariableEditor';\r\nimport { Button } from './Button';\r\n\r\nexport const VariablesEditor = ({\r\n  variables,\r\n  updateValue,\r\n  updateName,\r\n  addVariable,\r\n  removeVariable,\r\n}: {\r\n  variables: Variable[];\r\n  updateValue: (id: number, value: string) => void;\r\n  updateName: (id: number, name: string) => void;\r\n  addVariable: () => void;\r\n  removeVariable: (id: number) => void;\r\n}) => {\r\n  return (\r\n    <div>\r\n      {variables.map((variable: Variable) => (\r\n        <VariableEditor\r\n          id={variable.id}\r\n          key={variable.id}\r\n          value={variable.value}\r\n          updateValue={updateValue}\r\n          name={variable.name}\r\n          updateName={updateName}\r\n          removeVariable={removeVariable}\r\n        />\r\n      ))}\r\n      <Button onClick={addVariable}>Add variable</Button>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport default function useLocalStorage<T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, ((setState: ((prevState: T) => T) | T) => void)] {\r\n  const [item, setValue] = useState<T>(() => {\r\n    const valueFromStorage = window.localStorage.getItem(key);\r\n\r\n    return valueFromStorage\r\n      ? (JSON.parse(valueFromStorage) as T)\r\n      : initialValue;\r\n  });\r\n\r\n  const setItem = (setState: ((prevState: T) => T) | T) => {\r\n    setValue(prevState => {\r\n      const newState =\r\n        setState instanceof Function ? setState(prevState) : setState;\r\n      window.localStorage.setItem(key, JSON.stringify(newState));\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return [item, setItem];\r\n}\r\n","import { useCallback } from 'react';\r\nimport { Variable } from './VariableEditor';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nfunction safeParseNumber(value: string): number | string {\r\n  return /^\\d+(\\.\\d+)?$/.test(value) ? parseFloat(value) : value;\r\n}\r\n\r\nexport function useList(\r\n  key: string\r\n): [\r\n  Variable[],\r\n  (id: number, value: string) => void,\r\n  (id: number, name: string) => void,\r\n  () => void,\r\n  (id: number) => void\r\n] {\r\n  const [list, updateList] = useLocalStorage<Variable[]>(key, [\r\n    {\r\n      id: 0,\r\n      name: 'a',\r\n      value: 2,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'b',\r\n      value: 3,\r\n    },\r\n  ]);\r\n\r\n  const updateValue = useCallback((id: number, value: string) => {\r\n    updateList(list => {\r\n      return list.map(item =>\r\n        item.id === id\r\n          ? {\r\n              ...item,\r\n              value: safeParseNumber(value),\r\n            }\r\n          : item\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const updateName = useCallback((id: number, name: string) => {\r\n    updateList(list => {\r\n      return list.map(item => (item.id === id ? { ...item, name } : item));\r\n    });\r\n  }, []);\r\n\r\n  const addItem = useCallback(() => {\r\n    updateList(list => {\r\n      const id =\r\n        list.length > 0 ? Math.max(...list.map(item => item.id)) + 1 : 0;\r\n      return [...list, { id, name: '', value: '' }];\r\n    });\r\n  }, []);\r\n\r\n  const removeItem = useCallback((id: number) => {\r\n    updateList(list => {\r\n      return list.filter(item => item.id !== id);\r\n    });\r\n  }, []);\r\n\r\n  return [list, updateValue, updateName, addItem, removeItem];\r\n}\r\n","import React, { Component, useState } from 'react';\nimport { Variable } from './VariableEditor';\nimport { Editor } from './Editor';\nimport styled from 'styled-components';\nimport { Preview } from './Preview';\nimport { VariablesEditor } from './VariablesEditor';\nimport { useList } from './useList';\nimport useLocalStorage from './useLocalStorage';\n\nconst createVariablesObject = (\n  variables: Variable[]\n): { [name: string]: any } => {\n  const obj: { [name: string]: any } = {};\n  variables.forEach(variable => {\n    obj[variable.name] = variable.value;\n  });\n  return obj;\n};\n\nconst initialCode = `\\\n# Simple math\n## \\`a\\` + \\`b\\` = \\`a + b\\`\n\n# Functions\n## Half of \\`b\\` rounded down is \\`floor(b / 2)\\`\n\n# Fancy errors\n\\`\\`\\`\nc + 1\n\\`\\`\\`\n`;\n\nexport default () => {\n  const [\n    variables,\n    updateValue,\n    updateName,\n    addVariable,\n    removeVariable,\n  ] = useList('variables');\n  const [code, updateCode] = useLocalStorage('code', initialCode);\n\n  return (\n    <App>\n      <InputColumn>\n        <h1>Markdown live</h1>\n        <h2>Variables:</h2>\n        <VariablesEditor\n          variables={variables}\n          updateValue={updateValue}\n          updateName={updateName}\n          addVariable={addVariable}\n          removeVariable={removeVariable}\n        />\n        <h2>Document:</h2>\n\n        <Editor\n          value={code}\n          onChange={updateCode}\n          variables={createVariablesObject(variables)}\n        />\n      </InputColumn>\n      <PreviewColumn>\n        <Preview code={code} variables={createVariablesObject(variables)} />\n      </PreviewColumn>\n    </App>\n  );\n};\n\nconst App = styled.div`\n  max-width: 1600px;\n  margin: 0 auto;\n  background: #100d23;\n  padding: 10px;\n  display: flex;\n  min-height: 100vh;\n  flex-wrap: wrap-flex;\n`;\n\nconst InputColumn = styled.div`\n  flex: 1 0 300px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PreviewColumn = styled.div`\n  flex: 1 0 300px;\n  padding: 10px;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}